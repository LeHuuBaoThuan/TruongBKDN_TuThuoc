#ifndef	_KEYPAD_H
#define	_KEYPAD_H

#include "stm32f1xx_hal.h"
#include <stdint.h>
#include <stdbool.h>

#define           _KEYPAD_DEBOUNCE_TIME_MS        20
#define           _KEYPAD_USE_FREERTOS            0

typedef struct
{
	uint16_t  LastKey;
	uint8_t   ColumnSize;
	uint8_t   RowSize;
} KeyPad_t;

typedef struct
{
	struct
	{
		GPIO_TypeDef* GPIO0;
		GPIO_TypeDef* GPIO1;
		GPIO_TypeDef* GPIO2;
		GPIO_TypeDef* GPIO3;
	} PORT;
	struct
	{
		uint16_t GPIO_PIN_A;
		uint16_t GPIO_PIN_B;
		uint16_t GPIO_PIN_C;
		uint16_t GPIO_PIN_D;
	} PIN;
} GPIO_COLUMN_TYPEDEF;

typedef struct
{
	struct
	{
		GPIO_TypeDef* GPIO0;
		GPIO_TypeDef* GPIO1;
		GPIO_TypeDef* GPIO2;
		GPIO_TypeDef* GPIO3;
	} PORT;
	struct
	{
		uint16_t GPIO_PIN_A;
		uint16_t GPIO_PIN_B;
		uint16_t GPIO_PIN_C;
		uint16_t GPIO_PIN_D;
	} PIN;
} GPIO_ROW_TYPEDEF;

GPIO_ROW_TYPEDEF volatile COL_KEY_PAD;
GPIO_ROW_TYPEDEF volatile ROW_KEY_PAD;

void      KeyPad_Init(uint8_t sizeColumn, uint8_t sizeRow);
uint16_t  KeyPad_WaitForKey(uint32_t	Timeout_ms);
char      KeyPad_WaitForKeyGetChar(uint32_t	Timeout_ms);

#endif
