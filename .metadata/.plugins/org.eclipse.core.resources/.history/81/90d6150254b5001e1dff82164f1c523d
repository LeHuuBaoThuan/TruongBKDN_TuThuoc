/*
 * lcd_user.c
 *
 *  Created on: Jan 16, 2024
 *      Author: BaoThuan
 */

#include<lcd_user.h>

//void lcd_user_init(CLCD_I2C_Name* LCD_user_func, I2C_HandleTypeDef* hi2c_CLCD_user, uint8_t Address_user, uint8_t Colums_user, uint8_t Rows_user)
//{
//	LCD_user_func->I2C = hi2c_CLCD_user;
//	LCD_user_func->ADDRESS = Address_user;
//	LCD_user_func->COLUMS = Colums_user;
//	LCD_user_func->ROWS = Rows_user;
//	LCD_user_func(LCD_user_func, hi2c_CLCD_user, Address_user, Colums_user, Rows_user);
//}

void lcd_user_display(CLCD_I2C_Name* LCD_user, int temp)
{
	if(temp == 0)
	{
		// dislay hello ! Status_Display=0
		CLCD_I2C_SetCursor(LCD_user, 0, 0);
		CLCD_I2C_WriteString(LCD_user,"TRUONG DHBK-DHDN");

		CLCD_I2C_SetCursor(LCD_user, 3, 1);
		CLCD_I2C_WriteString(LCD_user,"KHOA CO KHI");

		CLCD_I2C_SetCursor(LCD_user, 1, 2);
		CLCD_I2C_WriteString(LCD_user,"TU THUOC");

		CLCD_I2C_SetCursor(LCD_user, 2, 3);
		CLCD_I2C_WriteString(LCD_user,"Please Set Mode !");
	}
	else if(temp == 1)
	{
		// dislay Select Mode ! Status_Display=1
		CLCD_I2C_SetCursor(LCD_user, 4, 0);
		CLCD_I2C_WriteString(LCD_user,"Select Mode");

		CLCD_I2C_SetCursor(LCD_user, 1, 1);
		CLCD_I2C_WriteString(LCD_user,"Select cycle");

		CLCD_I2C_SetCursor(LCD_user, 1, 2);
		CLCD_I2C_WriteString(LCD_user,"Until Cut");

		CLCD_I2C_SetCursor(LCD_user, 1, 3);
		CLCD_I2C_WriteString(LCD_user,"Exit");
	}
	else if(temp == 2)
	{
		// dislay Select cycle ! Status_Display =2
		CLCD_I2C_SetCursor(LCD_user, 0, 0);
		CLCD_I2C_WriteString(LCD_user,"Temp : ");

		CLCD_I2C_SetCursor(LCD_user, 0, 1);
		CLCD_I2C_WriteString(LCD_user,"Diameter : ");

		CLCD_I2C_SetCursor(LCD_user, 0, 2);
		CLCD_I2C_WriteString(LCD_user,"Cycle : ");

		CLCD_I2C_SetCursor(LCD_user, 0, 3);
		CLCD_I2C_WriteString(LCD_user,"Start");

	}
	else if(temp == 3)
	{
		// dislay Until Cut ! Status_Display = 3
		CLCD_I2C_SetCursor(LCD_user, 0, 0);
		CLCD_I2C_WriteString(LCD_user,"Temp : ");

		CLCD_I2C_SetCursor(LCD_user, 0, 1);
		CLCD_I2C_WriteString(LCD_user,"Diameter : ");

		CLCD_I2C_SetCursor(LCD_user, 0, 2);
		CLCD_I2C_WriteString(LCD_user,"Start");

		CLCD_I2C_SetCursor(LCD_user, 0, 3);
		CLCD_I2C_WriteString(LCD_user,"Exit");
	}
	else if(temp == 4)
	{
		// dislay Main ! Status_Display = 4

	  CLCD_I2C_SetCursor(LCD_user, 3, 0);
	  CLCD_I2C_WriteString(LCD_user,"T.N DO BEN MOI");

	  CLCD_I2C_SetCursor(LCD_user, 0, 1);
	  CLCD_I2C_WriteString(LCD_user,"Counter:");
	  CLCD_I2C_SetCursor(LCD_user, 17, 1);
	  CLCD_I2C_WriteString(LCD_user,"(V)");

	  CLCD_I2C_SetCursor(LCD_user, 0, 2);
	  CLCD_I2C_WriteString(LCD_user,"Force : ");
	  CLCD_I2C_SetCursor(LCD_user, 17, 2);
	  CLCD_I2C_WriteString(LCD_user,"(N)");

	  CLCD_I2C_SetCursor(LCD_user, 0, 3);
	  CLCD_I2C_WriteString(LCD_user,"Temperature:");
	  CLCD_I2C_SetCursor(LCD_user, 17, 3);
	  CLCD_I2C_WriteString(LCD_user,"(T)");
	}
}
