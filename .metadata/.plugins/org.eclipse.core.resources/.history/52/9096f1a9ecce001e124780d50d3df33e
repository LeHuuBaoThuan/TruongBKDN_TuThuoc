/*
 * uart_user.c
 *
 *  Created on: Feb 8, 2024
 *      Author: BaoThuan
 */

#include<uart_user.h>

static UART_HandleTypeDef Lib_uart;
static const char * confirm_NUM_PIN = "*NUM-PIN:";
static char num = 0;
static uint8_t pin[5] = {0};


//==============================================================================================================================================================
/* <function summary decription>
  +) NOTE:
    -Truyen vao voi param:
    	*NUM:x, PIN:abcde\n\r
  +) PARAM:
    -uint8_t * rxBuffer								: value frome EXTI uart
  +) RETURN:
    -bool											: true
    												  false
*/
static bool UART_Check_string(uint8_t * rxBuffer)
{
	if(strstr((char*)rxBuffer, confirm_NUM_PIN) != NULL)
	{
		return true;
	}
	else
	{
		return false;
	}
}


static void UART_SetNUM_PIN(uint8_t * rxBuffer)
{
   /* Kiểm tra độ dài của command "*NUM-PIN:x,abcde\n\r"*/
   if(strlen((char*)rxBuffer) == 17)
   {
      /*Tách NUM thiết bị */
      char *token = NULL;
      token = strtok((char*)rxBuffer, ":"); //*NUM-PIN:
      token = strtok(NULL, ","); //x
      num = *token; //num = x


      /*Tách PIN thiết bị */
      token = strtok(NULL, "\n"); //abcde
      memcpy(pin, token, 5); //pin = abcde;

      token = NULL;

//      response("\r\n+OK\r\n ");
   }
   else
   {
//      response("\r\n+ERROR:error command\r\n");
   }
}

static void UART_Assign_password()
{
	switch (num)
	{
		case '1':

			break;
		case '2':
			break;
		case '3':
			break;
		case '4':
			break;
		case '5':

			break;
		case '6':

			break;
		case '7':

			break;
	}
}


void UART_Init_UART(UART_HandleTypeDef *huart)
{
	Lib_uart = *huart;
}



STATE_TX_PIN UART_handler(uint8_t * rxBuffer)
{
	if(UART_Check_string(rxBuffer) == true)
	{
		UART_SetNUM_PIN(rxBuffer);



		return UART_HANDLER_OKE;
	}
	else
	{
		return UART_HANDLER_ERROR;
	}
}
